namespace Lab02_Ordenacao
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.Write("Escolha a atividade: ");
            int op = int.Parse(Console.ReadLine());
            switch (op)
            {
                case 1:
                    int[] vetor = new int[5] {1,2,3,4,5};
                    Console.Write("Pesquisa Binária sem pos: ");
                    int pesquisa = int.Parse(Console.ReadLine());
                    pesquisaBinariaSemPos(vetor,0,vetor.Length-1,pesquisa);
                    break;
                case 2:
                    break;
                case 3:
                    break;
                case 4:
                    break;
                default:
                    Console.WriteLine("Inválida");
                    break;
            }
        }
        static int pesquisaBinariaSemPos(int[] vetor, int inicio, int final, int pesquisa)
        {
            int meio = (int) (final - inicio)/2;
            if (vetor[meio] == pesquisa)
            {
                Console.WriteLine("Exite no vetor");
                return 0;
            }
            else if (vetor[meio] > pesquisa)
                final = meio - 1;
            else
                inicio = meio + 1;
            
            return pesquisaBinariaSemPos(vetor, inicio, final, pesquisa);
        }
        
        
        static int pesquisaBinariaSemPos(int[] vetor, int inicio, int final, int pesquisa)
        {
            int meio = (int)(final - inicio) / 2;

            if (vetor[meio] == pesquisa)
            {
                Console.WriteLine("Exite no vetor");
                return 0;
            }


            if (vetor[meio] > pesquisa)
                final = --meio;
            else 
                inicio = ++meio;


            if (inicio == meio && vetor[inicio] > pesquisa || final == meio && vetor[final] < pesquisa)
            {
                Console.WriteLine("Não exite no vetor");
                return 0;
            }
            return pesquisaBinariaSemPos(vetor, inicio, final, pesquisa);
        }
        static int pesquisaBinariaComPos(int[] vetor, int pos, int pesquisa)
        {
            if (vetor[pos] == pesquisa)
            {
                Console.WriteLine("Exite no vetor");
                return 0;
            }
            else if(pos <= 0 || pos >= vetor.Length)
            {
                Console.WriteLine("Não exite no vetor");
                return 0;
            }
            if (vetor[pos] > pesquisa)
                pos++;
            else
                pos--;
            return pesquisaBinariaComPos(vetor, pos, pesquisa);
        }
    }
}
